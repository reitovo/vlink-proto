syntax = "proto3";
import "common.proto";

package vts.server;

message Peer {
    string peerId = 1;
    bool isServer = 2;
    string nick = 3;
    int64 rtt = 4;
    int32 natType = 5;
    int32 sortingOrder = 6;
}

message Sdp {
    string sdp = 1;
    string type = 2;
    string fromPeerId = 3;
    string toPeerId = 4;
    uint64 timestamp = 5;
    string turn = 6;
}

message ReqCreateRoom {
    string peerId = 1;
    FrameFormatSetting format = 2; 
    string nick = 4;
}

message ReqJoinRoom {
    string roomId = 1;
    string peerId = 2;
    string nick = 3;
}

message ReqNickname {
    string nick = 2;
}

message ReqNatType {
    int32 natType = 2;
}

message ReqRtt {
    map<string, int64> rtt = 1;
} 

message RspRoomInfo {
    string roomId = 2;
    FrameFormatSetting format = 3; 
}

message ReqShareInfo {
    string gpu = 1;
    string capture = 2;
    bool start = 3;
}

message Notify {
    oneof notify {
        NotifyPeers peers = 2;
        Sdp sdp = 3;
        FrameFormatSetting frame = 4;
        NotifyCommon roomDestroy = 5;
        NotifyCommon forceIdr = 6;
    }
} 

message NotifyPeers {
    repeated Peer peers = 1;
}  

service RoomService {
    rpc Hello(ReqCommon) returns (RspCommon);

    rpc CreateRoom(ReqCreateRoom) returns (RspRoomInfo);
    rpc JoinRoom(ReqJoinRoom) returns (RspRoomInfo);

    rpc ReceiveNotify(ReqCommon) returns (stream Notify);

    rpc SetSdp(Sdp) returns (RspCommon);
    rpc SetFrameFormat(FrameFormatSetting) returns (RspCommon); 
    rpc SetNickName(ReqNickname) returns (RspCommon);
    rpc SetNatType(ReqNatType) returns (RspCommon);
    rpc SetRtt(ReqRtt) returns (RspCommon);
    rpc SetShareInfo(ReqShareInfo) returns (RspCommon);
    
    rpc RequestIdr(ReqCommon) returns (RspCommon);

    rpc Exit(ReqCommon) returns (RspCommon);
} 